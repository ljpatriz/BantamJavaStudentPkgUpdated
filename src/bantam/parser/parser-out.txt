Opening files...
Parsing specification from standard input...
Error at 587(56): java_cup.runtime.Symbol "arrayAssignExpr" has not been declared
Error at 648(10): Syntax error
Error at 657(13): Syntax Error
===== Terminals =====
[0]EOF [1]error [2]LEX_ERROR [3]CLASS [4]EXTENDS 
[5]IF [6]ELSE [7]WHILE [8]FOR [9]BREAK 
[10]NEW [11]RETURN [12]INSTANCEOF [13]PLUS [14]MINUS 
[15]TIMES [16]DIVIDE [17]MODULUS [18]NOT [19]AND 
[20]OR [21]EQ [22]NE [23]LT [24]LEQ 
[25]GT [26]GEQ [27]ASSIGN [28]INCR [29]DECR 
[30]LPAREN [31]RPAREN [32]LBRACE [33]RBRACE [34]LSQBRACE 
[35]RSQBRACE [36]SEMI [37]COMMA [38]DOT [39]ID 
[40]INT_CONST [41]BOOLEAN_CONST [42]STRING_CONST 

===== Non terminals =====
[0]$START [1]program [2]class_list [3]class [4]member_list 
[5]member [6]method [7]field [8]expr [9]expr_list 
[10]formal_list [11]formal [12]stmt_list [13]stmt [14]exprStmt 
[15]declStmt [16]ifStmt [17]whileStmt [18]forStmt [19]breakStmt 
[20]returnStmt [21]blockStmt [22]assignExpr [23]castExpr [24]arrayassignExpr 
[25]arrayExpr [26]dispatchExpr [27]newExpr [28]newArrayExpr [29]instanceofExpr 
[30]binaryExpr [31]unaryExpr [32]constExpr [33]varExpr [34]binaryarithExpr 
[35]binarycompExpr [36]binarylogicExpr [37]unarynegExpr [38]unarynotExpr [39]unaryincrExpr 
[40]unarydecrExpr 

===== Productions =====
[0] program ::= class_list 
[1] $START ::= program EOF 
[2] class_list ::= class 
[3] class_list ::= class_list class 
[4] class ::= CLASS ID LBRACE member_list RBRACE 
[5] class ::= CLASS ID EXTENDS ID LBRACE member_list RBRACE 
[6] member_list ::= 
[7] member_list ::= member 
[8] member_list ::= member_list member 
[9] member ::= method 
[10] member ::= field 
[11] method ::= ID ID LPAREN formal_list RPAREN LBRACE stmt_list RBRACE 
[12] field ::= ID ID SEMI 
[13] field ::= ID LSQBRACE RSQBRACE ID SEMI 
[14] field ::= ID ID ASSIGN expr SEMI 
[15] field ::= ID LSQBRACE RSQBRACE ID ASSIGN expr SEMI 
[16] formal_list ::= 
[17] formal_list ::= formal 
[18] formal_list ::= formal_list COMMA formal 
[19] formal ::= ID ID 
[20] formal ::= ID LSQBRACE RSQBRACE ID 
[21] stmt_list ::= 
[22] stmt_list ::= stmt 
[23] stmt_list ::= stmt_list stmt 
[24] stmt ::= exprStmt 
[25] stmt ::= declStmt 
[26] stmt ::= ifStmt 
[27] stmt ::= whileStmt 
[28] stmt ::= forStmt 
[29] stmt ::= breakStmt 
[30] stmt ::= returnStmt 
[31] stmt ::= blockStmt 
[32] exprStmt ::= expr SEMI 
[33] declStmt ::= ID ID ASSIGN expr SEMI 
[34] declStmt ::= ID LSQBRACE RSQBRACE ID ASSIGN expr SEMI 
[35] ifStmt ::= IF LPAREN expr RPAREN stmt 
[36] ifStmt ::= IF LPAREN expr RPAREN stmt ELSE stmt 
[37] whileStmt ::= WHILE LPAREN expr RPAREN stmt 
[38] forStmt ::= FOR LPAREN SEMI SEMI RPAREN stmt 
[39] forStmt ::= FOR LPAREN expr SEMI SEMI RPAREN stmt 
[40] forStmt ::= FOR LPAREN SEMI expr SEMI RPAREN stmt 
[41] forStmt ::= FOR LPAREN SEMI SEMI expr RPAREN stmt 
[42] forStmt ::= FOR LPAREN expr SEMI expr SEMI RPAREN stmt 
[43] forStmt ::= FOR LPAREN expr SEMI SEMI expr RPAREN stmt 
[44] forStmt ::= FOR LPAREN SEMI expr SEMI expr RPAREN stmt 
[45] forStmt ::= FOR LPAREN expr SEMI expr SEMI expr RPAREN stmt 
[46] forStmt ::= FOR LPAREN declStmt SEMI expr SEMI expr RPAREN stmt 
[47] breakStmt ::= BREAK SEMI 
[48] returnStmt ::= RETURN SEMI 
[49] returnStmt ::= RETURN expr SEMI 
[50] blockStmt ::= LBRACE stmt_list RBRACE 
[51] expr_list ::= 
[52] expr_list ::= expr 
[53] expr_list ::= expr_list COMMA expr 
[54] expr ::= assignExpr 
[55] expr ::= dispatchExpr 
[56] expr ::= newExpr 
[57] expr ::= instanceofExpr 
[58] expr ::= castExpr 
[59] expr ::= binaryExpr 
[60] expr ::= unaryExpr 
[61] expr ::= constExpr 
[62] expr ::= varExpr 
[63] expr ::= arrayExpr 
[64] expr ::= 
[65] expr ::= LPAREN expr RPAREN 
[66] assignExpr ::= varExpr ASSIGN expr 
[67] arrayassignExpr ::= arrayExpr ASSIGN expr 
[68] dispatchExpr ::= ID LPAREN expr_list RPAREN 
[69] dispatchExpr ::= expr DOT ID LPAREN expr_list RPAREN 
[70] newExpr ::= NEW ID LPAREN RPAREN 
[71] instanceofExpr ::= expr INSTANCEOF ID 
[72] instanceofExpr ::= expr INSTANCEOF ID LSQBRACE RSQBRACE 
[73] castExpr ::= LPAREN ID RPAREN LPAREN expr RPAREN 
[74] castExpr ::= LPAREN ID LSQBRACE RSQBRACE RPAREN LPAREN expr RPAREN 
[75] binaryExpr ::= binaryarithExpr 
[76] binaryExpr ::= binarycompExpr 
[77] binaryExpr ::= binarylogicExpr 
[78] unaryExpr ::= unarynegExpr 
[79] unaryExpr ::= unarynotExpr 
[80] unaryExpr ::= unaryincrExpr 
[81] unaryExpr ::= unarydecrExpr 
[82] constExpr ::= INT_CONST 
[83] constExpr ::= BOOLEAN_CONST 
[84] constExpr ::= STRING_CONST 
[85] binaryarithExpr ::= expr PLUS expr 
[86] binaryarithExpr ::= expr MINUS expr 
[87] binaryarithExpr ::= expr TIMES expr 
[88] binaryarithExpr ::= expr DIVIDE expr 
[89] binaryarithExpr ::= expr MODULUS expr 
[90] binarycompExpr ::= expr EQ expr 
[91] binarycompExpr ::= expr NE expr 
[92] binarycompExpr ::= expr LT expr 
[93] binarycompExpr ::= expr LEQ expr 
[94] binarycompExpr ::= expr GT expr 
[95] binarycompExpr ::= expr GEQ expr 
[96] binarylogicExpr ::= expr AND expr 
[97] binarylogicExpr ::= expr OR expr 
[98] unarynegExpr ::= MINUS expr 
[99] unarynotExpr ::= NOT expr 
[100] unaryincrExpr ::= INCR expr 
[101] unaryincrExpr ::= expr INCR 
[102] unarydecrExpr ::= DECR expr 
[103] unarydecrExpr ::= expr DECR 
[104] varExpr ::= ID 
[105] varExpr ::= expr DOT ID 
[106] arrayExpr ::= ID LSQBRACE expr RSQBRACE 
[107] arrayExpr ::= expr DOT ID LSQBRACE expr RSQBRACE 

===== Viable Prefix Recognizer =====
null
null
Closing files...
------- CUP v0.10k Parser Generation Summary -------
  3 errors and 0 warnings
  43 terminals, 41 non-terminals, and 108 productions declared, 
  producing 0 unique parse states.
  0 terminals declared but not used.
  0 non-terminals declared but not used.
  0 productions never reduced.
  0 conflicts detected (100 expected).
  No code produced.
---------------------------------------------------- (v0.10k)
